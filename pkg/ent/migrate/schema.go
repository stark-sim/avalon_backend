// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CardsColumns holds the columns for the "cards" table.
	CardsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64},
		{Name: "created_by", Type: field.TypeInt64, Default: 0},
		{Name: "updated_by", Type: field.TypeInt64, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Default: ""},
	}
	// CardsTable holds the schema information for the "cards" table.
	CardsTable = &schema.Table{
		Name:       "cards",
		Columns:    CardsColumns,
		PrimaryKey: []*schema.Column{CardsColumns[0]},
	}
	// GamesColumns holds the columns for the "games" table.
	GamesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64},
		{Name: "created_by", Type: field.TypeInt64, Default: 0},
		{Name: "updated_by", Type: field.TypeInt64, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime},
	}
	// GamesTable holds the schema information for the "games" table.
	GamesTable = &schema.Table{
		Name:       "games",
		Columns:    GamesColumns,
		PrimaryKey: []*schema.Column{GamesColumns[0]},
	}
	// GameUsersColumns holds the columns for the "game_users" table.
	GameUsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64},
		{Name: "created_by", Type: field.TypeInt64, Default: 0},
		{Name: "updated_by", Type: field.TypeInt64, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "game_id", Type: field.TypeInt64},
	}
	// GameUsersTable holds the schema information for the "game_users" table.
	GameUsersTable = &schema.Table{
		Name:       "game_users",
		Columns:    GameUsersColumns,
		PrimaryKey: []*schema.Column{GameUsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "game_users_games_game_users",
				Columns:    []*schema.Column{GameUsersColumns[7]},
				RefColumns: []*schema.Column{GamesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// RoomsColumns holds the columns for the "rooms" table.
	RoomsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64},
		{Name: "created_by", Type: field.TypeInt64, Default: 0},
		{Name: "updated_by", Type: field.TypeInt64, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Default: ""},
	}
	// RoomsTable holds the schema information for the "rooms" table.
	RoomsTable = &schema.Table{
		Name:       "rooms",
		Columns:    RoomsColumns,
		PrimaryKey: []*schema.Column{RoomsColumns[0]},
	}
	// RoomUsersColumns holds the columns for the "room_users" table.
	RoomUsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64},
		{Name: "created_by", Type: field.TypeInt64, Default: 0},
		{Name: "updated_by", Type: field.TypeInt64, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "room_id", Type: field.TypeInt64},
	}
	// RoomUsersTable holds the schema information for the "room_users" table.
	RoomUsersTable = &schema.Table{
		Name:       "room_users",
		Columns:    RoomUsersColumns,
		PrimaryKey: []*schema.Column{RoomUsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "room_users_rooms_room_users",
				Columns:    []*schema.Column{RoomUsersColumns[7]},
				RefColumns: []*schema.Column{RoomsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CardsTable,
		GamesTable,
		GameUsersTable,
		RoomsTable,
		RoomUsersTable,
	}
)

func init() {
	GameUsersTable.ForeignKeys[0].RefTable = GamesTable
	RoomUsersTable.ForeignKeys[0].RefTable = RoomsTable
}
