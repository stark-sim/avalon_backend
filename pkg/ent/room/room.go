// Code generated by ent, DO NOT EDIT.

package room

import (
	"time"
)

const (
	// Label holds the string label denoting the room type in the database.
	Label = "room"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedBy holds the string denoting the created_by field in the database.
	FieldCreatedBy = "created_by"
	// FieldUpdatedBy holds the string denoting the updated_by field in the database.
	FieldUpdatedBy = "updated_by"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldClosed holds the string denoting the closed field in the database.
	FieldClosed = "closed"
	// EdgeRoomUsers holds the string denoting the room_users edge name in mutations.
	EdgeRoomUsers = "room_users"
	// EdgeGames holds the string denoting the games edge name in mutations.
	EdgeGames = "games"
	// EdgeRecords holds the string denoting the records edge name in mutations.
	EdgeRecords = "records"
	// Table holds the table name of the room in the database.
	Table = "rooms"
	// RoomUsersTable is the table that holds the room_users relation/edge.
	RoomUsersTable = "room_users"
	// RoomUsersInverseTable is the table name for the RoomUser entity.
	// It exists in this package in order to avoid circular dependency with the "roomuser" package.
	RoomUsersInverseTable = "room_users"
	// RoomUsersColumn is the table column denoting the room_users relation/edge.
	RoomUsersColumn = "room_id"
	// GamesTable is the table that holds the games relation/edge.
	GamesTable = "games"
	// GamesInverseTable is the table name for the Game entity.
	// It exists in this package in order to avoid circular dependency with the "game" package.
	GamesInverseTable = "games"
	// GamesColumn is the table column denoting the games relation/edge.
	GamesColumn = "room_id"
	// RecordsTable is the table that holds the records relation/edge.
	RecordsTable = "records"
	// RecordsInverseTable is the table name for the Record entity.
	// It exists in this package in order to avoid circular dependency with the "record" package.
	RecordsInverseTable = "records"
	// RecordsColumn is the table column denoting the records relation/edge.
	RecordsColumn = "room_id"
)

// Columns holds all SQL columns for room fields.
var Columns = []string{
	FieldID,
	FieldCreatedBy,
	FieldUpdatedBy,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldName,
	FieldClosed,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedBy holds the default value on creation for the "created_by" field.
	DefaultCreatedBy int64
	// DefaultUpdatedBy holds the default value on creation for the "updated_by" field.
	DefaultUpdatedBy int64
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultDeletedAt holds the default value on creation for the "deleted_at" field.
	DefaultDeletedAt time.Time
	// DefaultName holds the default value on creation for the "name" field.
	DefaultName string
	// DefaultClosed holds the default value on creation for the "closed" field.
	DefaultClosed bool
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() int64
)
