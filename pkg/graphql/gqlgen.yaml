# schema tells gqlgen when the GraphQL schema is located.
schema:
  - ./avalon_backend.graphql

# Where should the generated server code go?
exec:
  layout: follow-schema
  dir: .
  package: graphql

# Enable Apollo federation support
federation:
  filename: ./federation.go
  package: graphql
  version: 2

# resolver reports where the resolver implementations go.
resolver:
  layout: follow-schema
  dir: .
  package: graphql

# Where should any generated models go?
model:
  filename: ./model/models_gen.go
  package: model

# gqlgen will search for any type names in the schema in these go packages
# if they match it will use them, otherwise it will generate them.

# autobind tells gqngen to search for any type names in the GraphQL schema in the
# provided package. If they match it will use them, otherwise it will generate new.
autobind:
  - avalon_backend/pkg/ent

# This section declares type mapping between the GraphQL and Go type systems.
models:
  # Defines the ID field as Go 'int'.
  ID:
    model:
      - github.com/99designs/gqlgen/graphql.ID
  Int64:
    model:
      - github.com/99designs/gqlgen/graphql.Int64
  Node:
    model:
      - avalon_backend/pkg/ent.Noder
