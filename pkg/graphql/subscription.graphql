type Subscription {
    """ 实时获取房间人数 """
    getRoomUsers(req: RoomRequest): [RoomUser]
    """ 实时检测房间有没有开始游戏，不展示游戏的进一步数据 """
    getRoomOngoingGame(req: RoomRequest!): Game
    """ 实时获取游戏中的各任务状态，只获取任务状态，不能拿进一步数据 """
    getMissionsByGame(req: GameRequest!): [Mission!]!
    """ 实时获取刺客刀人环节信息，没到刺杀环节返回空 """
    getAssassinationByGame(req: GameRequest!): AssassinInfo
}

type Mutation {
    """ 创建房间 """
    createRoom(req: CreateRoomInput!): Room
    """ 加入房间 """
    joinRoom(req: CreateRoomUserInput!): RoomUser
    """ 离开房间 """
    leaveRoom(req: CreateRoomUserInput!): RoomUser
    """ 关闭房间，暂不使用 Deprecated """
    closeRoom(req: RoomRequest!): Room
    """ 创建游戏 """
    createGame(req: CreateGameRequest!): Game
    """ 创建卡牌 """
    createCard(req: CreateCardInput!): Card
    """ 临时选择出征队伍 """
    tempPickSquads(req: [CreateSquadInput!]): [ID!]
    """ 选择出征队伍 """
    pickSquads(req: [CreateSquadInput!]!): [Squad!]
    """ 投票 """
    vote(req: VoteRequest!): Vote
    """ 行动/执行 """
    act(req: ActRequest!): Squad
    """ 暂时选择刺杀目标 """
    tempAssassinate(req: AssassinateRequest!): [ID!]
    """ 刺杀 """
    assassinate(req: AssassinateRequest!): Game
    """ 通过短号加入房间 """
    joinRoomByShortCode(req: JoinRoomInput!): RoomUser
}

extend type Query {
    """ 查询自己是否在某个未关闭的房间中，不在返回空 """
    getJoinedRoom(req: UserRequest!): Room
    """ 查询自己在某个 Mission 的 Vote，不用投票的返回空 """
    getVoteInMission(req: VoteWhereInput!): Vote
    """ 查询自己在某个 Mission 的 Squad，不用行动的返回空 """
    getSquadInMission(req: SquadWhereInput!): Squad
    """ 任务们结束时，查询 Game 的结算状态，如果任务们没有结束，返回空 """
    getEndedGame(req: GameRequest!): Game
    """ 获取刺杀环节信息盘，红方亮身份，蓝方不亮身份 """
    getVagueGameUsers(req: GameRequest!): [GameUser!]!
    """ 查询游戏中的游戏玩家，按序号排序，游戏未结束时不带 Card，游戏结束带 Card """
    getGameUsersByGame(req: GameRequest!): [GameUser!]!
    """ 查询自己在游戏中的卡牌 """
    getOnesCardInGame(req: GameUserRequest!): Card!
}

input GameUserRequest {
    userID: String!
    gameID: String!
}

input RoomRequest {
    id: String!
}

input GameRequest {
    id: String!
}

input VoteRequest {
    voteID: ID!
    pass: Boolean!
}

input ActRequest {
    squadID: ID!
    rat: Boolean!
}

input AssassinateRequest {
    gameID: ID!
    theAssassinatedIDs: [ID!]
}

input UserRequest {
    id: String!
}

input JoinRoomInput {
    shortCode: String!
    userID: ID!
}

type User @key(fields: "id", resolvable: false) {
    id: ID!
    name: String! @external
    phone: String! @external
}

extend type Vote {
    user: User!
}

extend type GameUser {
    user: User!
}

extend type RoomUser {
    user: User!
}

extend type Squad {
    user: User!
}

# 刺杀环节信息
type AssassinInfo {
    # 最终刺杀目标[们]
    theAssassinatedIDs: [ID!]
    # 暂时选中目标[们]
    tempPickedIDs: [ID!]
}

# 游戏创建请求体
input CreateGameRequest {
    roomID: String!
    # 自定义刺杀人数，默认 1 人
    assassinChance: Int
    # 自定义角色牌
    cardIDs: [String!]
    # 任务配置
    missionOptions: [MissionOption!]
    # 是否随机队长
    randomLeader: Boolean
}

# 任务配置，游戏创建时决定
input MissionOption {
    # 轮次
    sequence: Int!
    # 出征所需人数
    capacity: Int!
    # 是否为保护轮
    protected: Boolean!
}
